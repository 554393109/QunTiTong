package com.everlast.qtt.manager.ui;

import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import com.everlast.qtt.manager.controller.ApiController1;
import com.everlast.qtt.manager.common.CommonUtils;
import com.everlast.qtt.manager.common.Constants;
import com.everlast.qtt.manager.controller.ApiController3;
import com.everlast.qtt.manager.model.FmLoginModel;
import com.everlast.qtt.manager.model.OrderModel;
import com.everlast.qtt.manager.controller.ResultCallback;
import com.everlast.qtt.manager.controller.URLs;
import com.everlast.qtt.manager.model.ItemModel;
import com.everlast.qtt.manager.model.StadiumModel;
import com.everlast.qtt.manager.model.SportListAreaListModel;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author xuguobiao
 */
public class MainJFrame extends javax.swing.JFrame {

	/**
	 * Creates new form NewJFrame
	 */
	public MainJFrame() {
		initComponents();

		setLocationRelativeTo(null);
		Image titleIcon = Toolkit.getDefaultToolkit().getImage(this.getClass().getResource("kido.jpg"));
		setIconImage(titleIcon);
		setTitle(Constants.APP_TITLE + " " + Constants.VERSION_NAME);

		initTab3();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabel16 = new javax.swing.JLabel();
		jTabbedPane1 = new javax.swing.JTabbedPane();
		jPanel1 = new javax.swing.JPanel();
		tab1_btn_qttRegister = new javax.swing.JButton();
		jLabel1 = new javax.swing.JLabel();
		tab1_tf_fmName = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();
		tab1_tf_fmPwd = new javax.swing.JTextField();
		tab1_btn_fmLogin = new javax.swing.JButton();
		jLabel3 = new javax.swing.JLabel();
		tab1_tf_qttPwd = new javax.swing.JTextField();
		jScrollPane1 = new javax.swing.JScrollPane();
		tab1_table_register = new javax.swing.JTable();
		jLabel4 = new javax.swing.JLabel();
		tab1_tf_qttThreadCount = new javax.swing.JTextField();
		tab1_btn_fmAccountInfo = new javax.swing.JButton();
		tab1_label_fmLoginTip = new javax.swing.JLabel();
		tab1_btn_qttStop = new javax.swing.JButton();
		tab1_label_qttRegisterTip = new javax.swing.JLabel();
		jPanel4 = new javax.swing.JPanel();
		jLabel19 = new javax.swing.JLabel();
		tab1_tf_phoneFormat = new javax.swing.JTextField();
		jLabel20 = new javax.swing.JLabel();
		tab1_btn_cheatRegister = new javax.swing.JButton();
		tab1_btn_cheatStop = new javax.swing.JButton();
		tab1_label_qttRegisterCheatTip = new javax.swing.JLabel();
		jPanel2 = new javax.swing.JPanel();
		jPanel3 = new javax.swing.JPanel();
		jLabel5 = new javax.swing.JLabel();
		tab3_tf_qtt_account = new javax.swing.JTextField();
		jLabel6 = new javax.swing.JLabel();
		tab3_btn_login = new javax.swing.JButton();
		jLabel7 = new javax.swing.JLabel();
		jLabel8 = new javax.swing.JLabel();
		jScrollPane2 = new javax.swing.JScrollPane();
		tab3_ta_log = new javax.swing.JTextArea();
		tab3_btn_qiang = new javax.swing.JButton();
		tab3_label_tip = new javax.swing.JLabel();
		tab3_tf_verify = new javax.swing.JTextField();
		tab3_label_verify = new javax.swing.JLabel();
		jLabel11 = new javax.swing.JLabel();
		tab3_btn_stop = new javax.swing.JButton();
		tab_btn_clear = new javax.swing.JButton();
		jLabel10 = new javax.swing.JLabel();
		tab3_tf_interval = new javax.swing.JTextField();
		jLabel12 = new javax.swing.JLabel();
		tab3_combo_sporttype = new javax.swing.JComboBox();
		jLabel13 = new javax.swing.JLabel();
		tab3_combo_area = new javax.swing.JComboBox();
		jLabel14 = new javax.swing.JLabel();
		tab3_combo_cgname = new javax.swing.JComboBox();
		jLabel15 = new javax.swing.JLabel();
		tab3_tf_search = new javax.swing.JTextField();
		tab3btn_search = new javax.swing.JButton();
		jLabel9 = new javax.swing.JLabel();
		tab3_label_selected_cg = new javax.swing.JLabel();
		tab3_label_searchTip = new javax.swing.JLabel();
		tab3_btn_loadSelected = new javax.swing.JButton();
		tab3_btn_reset = new javax.swing.JButton();
		tab3_combo_date = new javax.swing.JComboBox();
		jLabel17 = new javax.swing.JLabel();
		tab3_tf_orderSubmitCount = new javax.swing.JTextField();
		tab3_combo_time = new javax.swing.JComboBox();
		tab3_tf_qttpwd = new javax.swing.JPasswordField();
		jLabel18 = new javax.swing.JLabel();
		tab3_combo_targetSportCode = new javax.swing.JComboBox();
		tab3_label_refreshTimeSection = new javax.swing.JLabel();
		tab3_checkbox_timer = new javax.swing.JCheckBox();
		tab3_tf_starttime = new javax.swing.JTextField();

		jLabel16.setText("jLabel16");

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		tab1_btn_qttRegister.setText("注册群体通");
		tab1_btn_qttRegister.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				tab1_btn_qttRegisterActionPerformed(evt);
			}
		});

		jLabel1.setText("飞码账号：");

		jLabel2.setText("密码：");

		tab1_btn_fmLogin.setText("登陆飞码");
		tab1_btn_fmLogin.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				tab1_btn_fmLoginActionPerformed(evt);
			}
		});

		jLabel3.setText("群体通密码（6-16位字母/数字）：");

		tab1_tf_qttPwd.setText("kido123456");

		tab1_table_register.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "手机号", "状态", "验证码", "短信内容", "备注" }) {
			Class[] types = new Class[] { java.lang.String.class, java.lang.String.class, java.lang.String.class,
					java.lang.String.class, java.lang.String.class };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}
		});
		jScrollPane1.setViewportView(tab1_table_register);

		jLabel4.setText("并发线程：");

		tab1_tf_qttThreadCount.setText("1");

		tab1_btn_fmAccountInfo.setText("账号信息");
		tab1_btn_fmAccountInfo.setEnabled(false);
		tab1_btn_fmAccountInfo.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				tab1_btn_fmAccountInfoActionPerformed(evt);
			}
		});

		tab1_label_fmLoginTip.setForeground(new java.awt.Color(255, 0, 0));
		tab1_label_fmLoginTip.setText("暂未登录");

		tab1_btn_qttStop.setText("停止");
		tab1_btn_qttStop.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				tab1_btn_qttStopActionPerformed(evt);
			}
		});

		tab1_label_qttRegisterTip.setForeground(new java.awt.Color(255, 0, 0));
		tab1_label_qttRegisterTip.setText("未开始");

		jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "开挂注册（绕过验证码）",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("宋体", 0, 12), new java.awt.Color(255, 0, 0))); // NOI18N
		jPanel4.setToolTipText("");

		jLabel19.setText("注册号码：");

		tab1_tf_phoneFormat.setText("1592084****");

		jLabel20.setForeground(new java.awt.Color(153, 153, 153));
		jLabel20.setText("手机号随机的位数请用*代替，密码统一默认为kido123456)");

		tab1_btn_cheatRegister.setText("开始注册");
		tab1_btn_cheatRegister.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				tab1_btn_cheatRegisterActionPerformed(evt);
			}
		});

		tab1_btn_cheatStop.setText("停止注册");
		tab1_btn_cheatStop.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				tab1_btn_cheatStopActionPerformed(evt);
			}
		});

		tab1_label_qttRegisterCheatTip.setForeground(new java.awt.Color(255, 0, 0));
		tab1_label_qttRegisterCheatTip.setText("未开始");

		javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
		jPanel4.setLayout(jPanel4Layout);
		jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel4Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addGroup(jPanel4Layout.createSequentialGroup().addComponent(jLabel19)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(tab1_tf_phoneFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 139,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(18, 18, 18).addComponent(tab1_btn_cheatRegister)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(tab1_btn_cheatStop)))
						.addGap(18, 18, 18).addComponent(tab1_label_qttRegisterCheatTip)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		jPanel4Layout
				.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel4Layout.createSequentialGroup().addContainerGap().addGroup(jPanel4Layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel19)
								.addComponent(tab1_tf_phoneFormat, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(tab1_btn_cheatRegister).addComponent(tab1_btn_cheatStop)
								.addComponent(tab1_label_qttRegisterCheatTip))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
								.addComponent(jLabel20)));

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel1Layout.createSequentialGroup()
								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(jPanel1Layout.createSequentialGroup().addComponent(jLabel1)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(tab1_tf_fmName, javax.swing.GroupLayout.PREFERRED_SIZE,
														128, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(18, 18, 18).addComponent(jLabel2)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(tab1_tf_fmPwd, javax.swing.GroupLayout.PREFERRED_SIZE,
														154, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(18, 18, 18).addComponent(tab1_btn_fmLogin)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(tab1_btn_fmAccountInfo))
										.addGroup(jPanel1Layout.createSequentialGroup().addComponent(jLabel3)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(tab1_tf_qttPwd, javax.swing.GroupLayout.PREFERRED_SIZE,
														107, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(jLabel4)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(tab1_tf_qttThreadCount,
														javax.swing.GroupLayout.PREFERRED_SIZE, 29,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(18, 18, 18).addComponent(tab1_btn_qttRegister)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(tab1_btn_qttStop)))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(tab1_label_fmLoginTip).addComponent(tab1_label_qttRegisterTip))
								.addGap(0, 186, Short.MAX_VALUE))
						.addComponent(jScrollPane1).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addContainerGap()));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
						jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1)
								.addComponent(tab1_tf_fmName, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel2)
								.addComponent(tab1_tf_fmPwd, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(tab1_btn_fmLogin).addComponent(tab1_btn_fmAccountInfo)
								.addComponent(tab1_label_fmLoginTip))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jLabel3).addComponent(tab1_btn_qttRegister)
										.addComponent(tab1_tf_qttPwd, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(jLabel4)
										.addComponent(tab1_tf_qttThreadCount, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(tab1_btn_qttStop).addComponent(tab1_label_qttRegisterTip))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		jTabbedPane1.addTab("群体通注册页", jPanel1);

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 848, Short.MAX_VALUE));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 575, Short.MAX_VALUE));

		jTabbedPane1.addTab("群体通账号信息页", jPanel2);

		jLabel5.setText("群体通账号：");

		tab3_tf_qtt_account.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyPressed(java.awt.event.KeyEvent evt) {
				tab3_tf_qtt_accountKeyPressed(evt);
			}
		});

		jLabel6.setText("密码：");

		tab3_btn_login.setText("确认登录");
		tab3_btn_login.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				tab3_btn_loginActionPerformed(evt);
			}
		});

		jLabel7.setText("指定订场日期：");

		jLabel8.setText("订场时间段：");

		tab3_ta_log.setColumns(20);
		tab3_ta_log.setRows(5);
		jScrollPane2.setViewportView(tab3_ta_log);

		tab3_btn_qiang.setText("开始抢购");
		tab3_btn_qiang.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				tab3_btn_qiangActionPerformed(evt);
			}
		});

		tab3_label_tip.setForeground(new java.awt.Color(255, 0, 0));
		tab3_label_tip.setText("暂未登录");

		tab3_tf_verify.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyPressed(java.awt.event.KeyEvent evt) {
				tab3_tf_verifyKeyPressed(evt);
			}
		});

		tab3_label_verify.setForeground(new java.awt.Color(0, 0, 255));
		tab3_label_verify.setText("点击获取");
		tab3_label_verify.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				tab3_label_verifyMouseClicked(evt);
			}
		});

		jLabel11.setText("验证码：");

		tab3_btn_stop.setText("停止");
		tab3_btn_stop.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				tab3_btn_stopActionPerformed(evt);
			}
		});

		tab_btn_clear.setText("清空日志");
		tab_btn_clear.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				tab_btn_clearActionPerformed(evt);
			}
		});

		jLabel10.setText("抢购轮询间隔(ms)：");

		tab3_tf_interval.setText("100");

		jLabel12.setText("运动项目：");

		jLabel13.setText("场馆区域：");

		jLabel14.setText("场馆列表：");

		jLabel15.setText("条件搜索：");

		tab3_tf_search.setText("广州市羽毛球运动管理中心");
		tab3_tf_search.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyPressed(java.awt.event.KeyEvent evt) {
				tab3_tf_searchKeyPressed(evt);
			}
		});

		tab3btn_search.setText("查询");
		tab3btn_search.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				tab3btn_searchActionPerformed(evt);
			}
		});

		jLabel9.setText("当前加载场馆：");

		tab3_label_selected_cg.setForeground(new java.awt.Color(255, 0, 0));
		tab3_label_selected_cg.setText("暂无");
		tab3_label_selected_cg.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				tab3_label_selected_cgMouseClicked(evt);
			}
		});

		tab3_label_searchTip.setForeground(new java.awt.Color(153, 153, 153));
		tab3_label_searchTip.setText("请根据条件搜索到对应场馆并选中加载（场馆列表只显示前6条）");

		tab3_btn_loadSelected.setText("加载选中场馆");
		tab3_btn_loadSelected.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				tab3_btn_loadSelectedActionPerformed(evt);
			}
		});

		tab3_btn_reset.setText("重置");
		tab3_btn_reset.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				tab3_btn_resetActionPerformed(evt);
			}
		});

		jLabel17.setText("订单提交数量：");

		tab3_tf_orderSubmitCount.setText("10");

		tab3_combo_time.setEditable(true);

		tab3_tf_qttpwd.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyPressed(java.awt.event.KeyEvent evt) {
				tab3_tf_qttpwdKeyPressed(evt);
			}
		});

		jLabel18.setText("指定项目：");

		tab3_label_refreshTimeSection.setForeground(new java.awt.Color(0, 0, 255));
		tab3_label_refreshTimeSection.setText("刷新订场时间段");
		tab3_label_refreshTimeSection.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				tab3_label_refreshTimeSectionMouseClicked(evt);
			}
		});

		tab3_checkbox_timer.setText("定时开始：");

		tab3_tf_starttime.setText("2016-01-01 09:00:00");

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel3Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jScrollPane2)
								.addGroup(jPanel3Layout.createSequentialGroup().addComponent(tab3_btn_qiang)
										.addGap(18, 18, 18).addComponent(tab3_btn_stop)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(tab_btn_clear))
								.addGroup(jPanel3Layout.createSequentialGroup().addGroup(jPanel3Layout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(jPanel3Layout.createSequentialGroup()
												.addGroup(jPanel3Layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(jLabel12).addComponent(jLabel14))
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(tab3_combo_cgname, javax.swing.GroupLayout.PREFERRED_SIZE,
														222, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(tab3_btn_loadSelected)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(tab3_label_searchTip))
										.addGroup(jPanel3Layout.createSequentialGroup().addGroup(jPanel3Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(jPanel3Layout.createSequentialGroup().addComponent(jLabel5)
														.addPreferredGap(
																javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(tab3_tf_qtt_account,
																javax.swing.GroupLayout.PREFERRED_SIZE, 109,
																javax.swing.GroupLayout.PREFERRED_SIZE))
												.addGroup(jPanel3Layout
														.createSequentialGroup().addGap(64, 64, 64)
														.addComponent(
																tab3_combo_sporttype,
																javax.swing.GroupLayout.PREFERRED_SIZE, 121,
																javax.swing.GroupLayout.PREFERRED_SIZE)))
												.addGap(18, 18, 18)
												.addGroup(jPanel3Layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,
																false)
														.addGroup(jPanel3Layout.createSequentialGroup()
																.addComponent(jLabel6)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(tab3_tf_qttpwd))
														.addGroup(jPanel3Layout.createSequentialGroup()
																.addComponent(jLabel13)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		tab3_combo_area,
																		javax.swing.GroupLayout.PREFERRED_SIZE, 129,
																		javax.swing.GroupLayout.PREFERRED_SIZE)))
												.addGap(18, 18, 18)
												.addGroup(jPanel3Layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(jPanel3Layout.createSequentialGroup()
																.addComponent(jLabel15)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(tab3_tf_search,
																		javax.swing.GroupLayout.PREFERRED_SIZE, 186,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGap(18, 18, 18).addComponent(tab3btn_search)
																.addGap(18, 18, 18).addComponent(tab3_btn_reset))
														.addGroup(jPanel3Layout.createSequentialGroup()
																.addComponent(jLabel11)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(tab3_label_verify,
																		javax.swing.GroupLayout.PREFERRED_SIZE, 70,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGap(2, 2, 2)
																.addComponent(tab3_tf_verify,
																		javax.swing.GroupLayout.PREFERRED_SIZE, 84,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGap(18, 18, 18).addComponent(tab3_btn_login)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addComponent(tab3_label_tip))))
										.addGroup(jPanel3Layout.createSequentialGroup().addComponent(jLabel9)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(tab3_label_selected_cg))
										.addGroup(jPanel3Layout.createSequentialGroup().addComponent(jLabel18)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(tab3_combo_targetSportCode,
														javax.swing.GroupLayout.PREFERRED_SIZE, 112,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(jLabel7)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(tab3_combo_date, javax.swing.GroupLayout.PREFERRED_SIZE,
														154, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(jLabel8)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(tab3_combo_time, javax.swing.GroupLayout.PREFERRED_SIZE,
														116, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(tab3_label_refreshTimeSection))
										.addGroup(jPanel3Layout.createSequentialGroup().addComponent(jLabel10)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(tab3_tf_interval, javax.swing.GroupLayout.PREFERRED_SIZE,
														53, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(jLabel17)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(tab3_tf_orderSubmitCount,
														javax.swing.GroupLayout.PREFERRED_SIZE, 44,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(18, 18, 18).addComponent(tab3_checkbox_timer)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(tab3_tf_starttime, javax.swing.GroupLayout.PREFERRED_SIZE,
														137, javax.swing.GroupLayout.PREFERRED_SIZE)))
										.addGap(0, 14, Short.MAX_VALUE)))
						.addContainerGap()));
		jPanel3Layout
				.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addGroup(jPanel3Layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel5)
								.addComponent(tab3_tf_qtt_account, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel6).addComponent(tab3_btn_login).addComponent(tab3_label_tip)
								.addComponent(tab3_tf_verify, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(tab3_label_verify).addComponent(jLabel11)
								.addComponent(tab3_tf_qttpwd, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(10, 10, 10)
								.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jLabel12)
										.addComponent(tab3_combo_sporttype, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(jLabel13)
										.addComponent(tab3_combo_area, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(jLabel15)
										.addComponent(tab3_tf_search, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(tab3btn_search).addComponent(tab3_btn_reset))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jLabel14)
										.addComponent(tab3_combo_cgname, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(tab3_label_searchTip).addComponent(tab3_btn_loadSelected))
								.addGap(6, 6, 6)
								.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jLabel9).addComponent(
												tab3_label_selected_cg, javax.swing.GroupLayout.PREFERRED_SIZE, 27,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(12, 12, 12)
								.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jLabel7).addComponent(jLabel8)
										.addComponent(tab3_combo_date, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(tab3_combo_time, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(jLabel18)
										.addComponent(tab3_combo_targetSportCode,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(tab3_label_refreshTimeSection))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jLabel10)
										.addComponent(tab3_tf_interval, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(jLabel17)
										.addComponent(tab3_tf_orderSubmitCount, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(tab3_checkbox_timer).addComponent(tab3_tf_starttime,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(tab3_btn_stop).addComponent(tab3_btn_qiang)
										.addComponent(tab_btn_clear))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
								.addContainerGap()));

		jTabbedPane1.addTab("场馆抢购页（临时）", jPanel3);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void tab1_btn_fmLoginActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_tab1_btn_fmLoginActionPerformed
		tab1_func_fmLogin();
	}// GEN-LAST:event_tab1_btn_fmLoginActionPerformed

	private void tab1_btn_fmAccountInfoActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_tab1_btn_fmAccountInfoActionPerformed
		tab1_func_showFmAccountInfo();
	}// GEN-LAST:event_tab1_btn_fmAccountInfoActionPerformed

	private void tab1_btn_qttRegisterActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_tab1_btn_qttRegisterActionPerformed
		tab1_func_startFmGetPhone();
	}// GEN-LAST:event_tab1_btn_qttRegisterActionPerformed

	private void tab1_btn_qttStopActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_tab1_btn_qttStopActionPerformed
		// TODO add your handling code here:
		tab1_func_switchRegiterStatus(false);
	}// GEN-LAST:event_tab1_btn_qttStopActionPerformed

	private void tab3btn_searchActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_tab3btn_searchActionPerformed
		// TODO add your handling code here:
		tab3_searchStadiumList();
	}// GEN-LAST:event_tab3btn_searchActionPerformed

	private void tab_btn_clearActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_tab_btn_clearActionPerformed
		// TODO add your handling code here:
		tab3_clearLog();
	}// GEN-LAST:event_tab_btn_clearActionPerformed

	private void tab3_btn_stopActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_tab3_btn_stopActionPerformed
		// TODO add your handling code here:
		tab3_stopQiang();
	}// GEN-LAST:event_tab3_btn_stopActionPerformed

	private void tab3_label_verifyMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tab3_label_verifyMouseClicked
		tab3_updateVerifyCode();
	}// GEN-LAST:event_tab3_label_verifyMouseClicked

	private void tab3_btn_qiangActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_tab3_btn_qiangActionPerformed
		tab3_startQiang();
	}// GEN-LAST:event_tab3_btn_qiangActionPerformed

	private void tab3_btn_loginActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_tab3_btn_loginActionPerformed
		tab3_login();
	}// GEN-LAST:event_tab3_btn_loginActionPerformed

	private void tab3_btn_resetActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_tab3_btn_resetActionPerformed
		tab3_tf_search.setText("");
		tab3_getComboData();
	}// GEN-LAST:event_tab3_btn_resetActionPerformed

	private void tab3_btn_loadSelectedActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_tab3_btn_loadSelectedActionPerformed
		int index = tab3_combo_cgname.getSelectedIndex();
		if (index >= 0) {
			tab3_selectStadium(tab3_modelList_cg.get(index));
		}
	}// GEN-LAST:event_tab3_btn_loadSelectedActionPerformed

	private void tab3_label_selected_cgMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tab3_label_selected_cgMouseClicked
		// TODO add your handling code here:
		String resourceId = tab3_select_stadiuModel.getStadiumResourceId();
		if (!"".equals(resourceId)) {
			CommonUtils.openBrowser(URLs.QTT_STADIUM_DETAIL + resourceId);
		}
	}// GEN-LAST:event_tab3_label_selected_cgMouseClicked

	private void tab3_tf_verifyKeyPressed(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_tab3_tf_verifyKeyPressed
		if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
			String verifyString = tab3_tf_verify.getText().trim();
			if ("".equals(verifyString)) {
				tab3_updateVerifyCode();
			} else {
				tab3_btn_login.doClick();
			}
		} else if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_F5) {
			tab3_updateVerifyCode();
		}
	}// GEN-LAST:event_tab3_tf_verifyKeyPressed

	private void tab3_tf_searchKeyPressed(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_tab3_tf_searchKeyPressed
		if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
			tab3btn_search.doClick();
		}
	}// GEN-LAST:event_tab3_tf_searchKeyPressed

	private void tab3_tf_qttpwdKeyPressed(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_tab3_tf_qttpwdKeyPressed
		if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
			tab3_updateVerifyCode();
			tab3_tf_verify.requestFocus();
		}
	}// GEN-LAST:event_tab3_tf_qttpwdKeyPressed

	private void tab3_tf_qtt_accountKeyPressed(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_tab3_tf_qtt_accountKeyPressed
		if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
			tab3_tf_qttpwd.requestFocus();
		}
	}// GEN-LAST:event_tab3_tf_qtt_accountKeyPressed

	private void tab3_label_refreshTimeSectionMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tab3_label_refreshTimeSectionMouseClicked
		tab3_requestTimeSection();
	}// GEN-LAST:event_tab3_label_refreshTimeSectionMouseClicked

	private void tab1_btn_cheatRegisterActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_tab1_btn_cheatRegisterActionPerformed
		if (tab1_isRegisterCheatRunning) {
			JOptionPane.showMessageDialog(this, "正在注册...");
			return;
		}

		String phoneFormat = tab1_tf_phoneFormat.getText().trim();
		if (phoneFormat.length() != 11) {
			JOptionPane.showMessageDialog(this, "手机号应该为11位，请正确输入！");
			return;
		}

		tab1_isRegisterCheatRunning = true;
		tab1_label_qttRegisterCheatTip.setText("正在注册...");
		tab1_func_qttRegisterCheat(phoneFormat);
	}// GEN-LAST:event_tab1_btn_cheatRegisterActionPerformed

	private void tab1_btn_cheatStopActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_tab1_btn_cheatStopActionPerformed
		tab1_isRegisterCheatRunning = false;
		tab1_label_qttRegisterCheatTip.setText("停止注册");
	}// GEN-LAST:event_tab1_btn_cheatStopActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		}
		// </editor-fold>
		// </editor-fold>

		/* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MainJFrame().setVisible(true);
//            }
//        });
		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
				} catch (Exception e) {
					JOptionPane.showMessageDialog(null, "初始化系统风格失败", Constants.APP_TITLE,
							JOptionPane.INFORMATION_MESSAGE);
				} finally {
					new MainJFrame().setVisible(true);
				}
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel10;
	private javax.swing.JLabel jLabel11;
	private javax.swing.JLabel jLabel12;
	private javax.swing.JLabel jLabel13;
	private javax.swing.JLabel jLabel14;
	private javax.swing.JLabel jLabel15;
	private javax.swing.JLabel jLabel16;
	private javax.swing.JLabel jLabel17;
	private javax.swing.JLabel jLabel18;
	private javax.swing.JLabel jLabel19;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel20;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JTabbedPane jTabbedPane1;
	private javax.swing.JButton tab1_btn_cheatRegister;
	private javax.swing.JButton tab1_btn_cheatStop;
	private javax.swing.JButton tab1_btn_fmAccountInfo;
	private javax.swing.JButton tab1_btn_fmLogin;
	private javax.swing.JButton tab1_btn_qttRegister;
	private javax.swing.JButton tab1_btn_qttStop;
	private javax.swing.JLabel tab1_label_fmLoginTip;
	private javax.swing.JLabel tab1_label_qttRegisterCheatTip;
	private javax.swing.JLabel tab1_label_qttRegisterTip;
	private javax.swing.JTable tab1_table_register;
	private javax.swing.JTextField tab1_tf_fmName;
	private javax.swing.JTextField tab1_tf_fmPwd;
	private javax.swing.JTextField tab1_tf_phoneFormat;
	private javax.swing.JTextField tab1_tf_qttPwd;
	private javax.swing.JTextField tab1_tf_qttThreadCount;
	private javax.swing.JButton tab3_btn_loadSelected;
	private javax.swing.JButton tab3_btn_login;
	private javax.swing.JButton tab3_btn_qiang;
	private javax.swing.JButton tab3_btn_reset;
	private javax.swing.JButton tab3_btn_stop;
	private javax.swing.JCheckBox tab3_checkbox_timer;
	private javax.swing.JComboBox tab3_combo_area;
	private javax.swing.JComboBox tab3_combo_cgname;
	private javax.swing.JComboBox tab3_combo_date;
	private javax.swing.JComboBox tab3_combo_sporttype;
	private javax.swing.JComboBox tab3_combo_targetSportCode;
	private javax.swing.JComboBox tab3_combo_time;
	private javax.swing.JLabel tab3_label_refreshTimeSection;
	private javax.swing.JLabel tab3_label_searchTip;
	private javax.swing.JLabel tab3_label_selected_cg;
	private javax.swing.JLabel tab3_label_tip;
	private javax.swing.JLabel tab3_label_verify;
	private javax.swing.JTextArea tab3_ta_log;
	private javax.swing.JTextField tab3_tf_interval;
	private javax.swing.JTextField tab3_tf_orderSubmitCount;
	private javax.swing.JTextField tab3_tf_qtt_account;
	private javax.swing.JPasswordField tab3_tf_qttpwd;
	private javax.swing.JTextField tab3_tf_search;
	private javax.swing.JTextField tab3_tf_starttime;
	private javax.swing.JTextField tab3_tf_verify;
	private javax.swing.JButton tab3btn_search;
	private javax.swing.JButton tab_btn_clear;
	// End of variables declaration//GEN-END:variables

	// ******* tab 1 ********//
	private ApiController1 apiController1 = new ApiController1();
	private FmLoginModel tab1_fmLoginModel = new FmLoginModel();
	private boolean tab1_isRegisterRunning = false;
	private boolean tab1_isRegisterCheatRunning = false;

	// ******* tab 3 ********//
	private ApiController3 apiController3 = new ApiController3();
	private boolean tab3_running = false;
	private boolean tab3_hasLogin = false;

	private ArrayList<ItemModel> tab3_modelList_sport = new ArrayList<ItemModel>();
	private ArrayList<ItemModel> tab3_modelList_area = new ArrayList<ItemModel>();
	private ArrayList<StadiumModel> tab3_modelList_cg = new ArrayList<StadiumModel>();

	private StadiumModel tab3_select_stadiuModel = new StadiumModel();

	private Timer tab3_qiang_timer = new Timer();
	private TimerTask tab3_qiang_timertask = new TimerTask() {
		@Override
		public void run() {
			tab3_startQiang();
			this.cancel();
		}
	};

	;

	// ***************** tab 1 ******************//
	private void tab1_func_fmLogin() {
		String fmName = tab1_tf_fmName.getText().trim();
		String fmPwd = tab1_tf_fmPwd.getText().trim();
		if (fmName.equals("") || fmPwd.equals("")) {
			JOptionPane.showMessageDialog(this, "请先输入飞码账号和密码");
			return;
		}
		tab1_btn_fmLogin.setEnabled(false);
		apiController1.fmLogin(fmName, fmPwd, new ResultCallback<FmLoginModel>() {
			@Override
			public void onResult(boolean success, FmLoginModel result, String error) {
				if (success) {
					tab1_fmLoginModel = result;
					tab1_fmLoginModel.setuName(fmName);
					tab1_fmLoginModel.setpWord(fmPwd);
					tab1_func_showFmAccountInfo();
					tab1_btn_fmLogin.setEnabled(false);
					tab1_btn_fmAccountInfo.setEnabled(true);
					tab1_label_fmLoginTip.setText("飞码登录成功");
				} else {
					JOptionPane.showMessageDialog(MainJFrame.this, "飞码账号登录失败", Constants.APP_TITLE,
							JOptionPane.ERROR_MESSAGE);
					tab1_fmLoginModel = new FmLoginModel();

					tab1_btn_fmLogin.setEnabled(true);
					tab1_btn_fmAccountInfo.setEnabled(false);
					tab1_label_fmLoginTip.setText("飞码登录失败");
				}
			}
		});
	}

	private final void tab1_func_startFmGetPhone() {
		String pwd = tab1_tf_qttPwd.getText().trim();
		String count = tab1_tf_qttThreadCount.getText().trim();
		int c = CommonUtils.parse2Int(count);
		if (c < 1 || c > 10) {
			JOptionPane.showMessageDialog(this, "并发线程数量范围为1-10");
			return;
		}
		if (pwd.length() < 6 || pwd.length() > 16) {
			JOptionPane.showMessageDialog(this, "密码请设为6-16位字母或数字");
			return;
		}

		tab1_func_switchRegiterStatus(true);
		apiController1.fmGetPhone(count, new ResultCallback<String[]>() {

			@Override
			public void onResult(boolean success, String[] result, String error) {
				if (success) {
					for (int i = 0; i < result.length; i++) {
						DefaultTableModel tableModel = ((DefaultTableModel) tab1_table_register.getModel());
						tableModel.addRow(new Object[] { result[i], "", "", "", "" });
					}
				} else {
					tab1_func_switchRegiterStatus(false);
				}
			}
		});
	}

	private void tab1_func_getVerifyCode() {

	}

	private void tab1_func_switchRegiterStatus(boolean running) {
		tab1_isRegisterRunning = running;

		if (tab1_isRegisterRunning) {
			tab1_tf_qttPwd.setEnabled(false);
			tab1_tf_qttThreadCount.setEnabled(false);
			tab1_btn_qttRegister.setEnabled(false);
			tab1_label_qttRegisterTip.setText("正在注册...");
		} else {
			tab1_tf_qttPwd.setEnabled(true);
			tab1_tf_qttThreadCount.setEnabled(true);
			tab1_btn_qttRegister.setEnabled(true);
			tab1_label_qttRegisterTip.setText("停止...");
		}
	}

	private void tab1_func_showFmAccountInfo() {
		// 账户余额&最大登录客户端个数&最多获取号码数&单个客户端最多获取号码数&折扣
		if (tab1_fmLoginModel.getToken().equals("")) {
			JOptionPane.showMessageDialog(this, "当前暂未登录");
			return;
		}
		String title = "飞码账号信息";
		String message = String.format(Constants.FORMAT_QTT_ACCOUNTINFO, tab1_fmLoginModel.getuName(),
				tab1_fmLoginModel.getBalance(), tab1_fmLoginModel.getMaxLoginNum(),
				tab1_fmLoginModel.getMaxGetPhoneTotalNum(), tab1_fmLoginModel.getMaxGetPhoneSingelNum(),
				tab1_fmLoginModel.getDiscount());
		JOptionPane.showMessageDialog(this, message, title, JOptionPane.INFORMATION_MESSAGE);
	}

	private void tab1_func_qttRegisterCheat(String phoneFormat) {
		if (!tab1_isRegisterCheatRunning) {
			return;
		}
		String newPhone = "";
		for (int i = 0; i < phoneFormat.length(); i++) {
			Character cha = phoneFormat.charAt(i);
			if (Character.isDigit(cha)) {
				newPhone += cha;
			} else {
				int digit = (int) (Math.random() * 10f);
				newPhone += digit;
			}
		}
		final String targetPhone = newPhone;
		apiController1.qttRegisterCheat(targetPhone, new ResultCallback<String>() {
			@Override
			public void onResult(boolean success, String result, String error) {
				if (success) {
					DefaultTableModel tableModel = ((DefaultTableModel) tab1_table_register.getModel());
					tableModel.addRow(new Object[] { targetPhone, result, "", "", "" });
				} else {
					DefaultTableModel tableModel = ((DefaultTableModel) tab1_table_register.getModel());
					tableModel.addRow(new Object[] { targetPhone, error, "", "", "" });
				}
				tab1_func_qttRegisterCheat(phoneFormat);
			}
		});

	}

	// **************** tab 3 ******************//
	private void initTab3() {
		tab3_combo_area.addItemListener(new ItemListener() {

			@Override
			public void itemStateChanged(ItemEvent e) {
				if (e.getStateChange() == e.SELECTED) {
					tab3_searchStadiumList();
				}
			}
		});
		tab3_combo_sporttype.addItemListener(new ItemListener() {

			@Override
			public void itemStateChanged(ItemEvent e) {
				if (e.getStateChange() == e.SELECTED) {
					tab3_searchStadiumList();
				}
			}
		});
		tab3_combo_cgname.addItemListener(new ItemListener() {

			@Override
			public void itemStateChanged(ItemEvent e) {
				if (e.getStateChange() == e.SELECTED) {
					int index = tab3_combo_cgname.getSelectedIndex();
					tab3_selectStadium(tab3_modelList_cg.get(index));
				}
			}
		});

		tab3_combo_targetSportCode.addItemListener(new ItemListener() {

			@Override
			public void itemStateChanged(ItemEvent e) {
				if (e.getStateChange() == e.SELECTED) {
					tab3_requestTimeSection();
				}
			}
		});

		tab3_checkbox_timer.addItemListener(new ItemListener() {
			@Override
			public void itemStateChanged(ItemEvent e) {
				if (tab3_checkbox_timer.isSelected()) {
					String startTime = tab3_tf_starttime.getText().trim();
					String timeFormat = CommonUtils.TIMEFORMAT_STRING0;
					try {
//                        Date date = Date.
						DateFormat format = new SimpleDateFormat(timeFormat);
						Date date = format.parse(startTime);
						tab3_qiang_timertask = new TimerTask() {
							@Override
							public void run() {
								tab3_startQiang();
								this.cancel();
							}
						};
						tab3_qiang_timer.schedule(tab3_qiang_timertask, date);
						tab3_logMessage("已开启定时抢购，将在 [" + startTime + "] 开始...", true);
					} catch (Exception ex) {
						tab3_logMessage("定时抢购设定的时间格式有误，正确格式应为 " + timeFormat, true);
						System.err.println(ex.getMessage());
					}
				} else {
					tab3_qiang_timertask.cancel();
					tab3_logMessage("定时抢购已取消。", true);
				}
			}
		});

		tab3_tf_starttime.setText(CommonUtils.getCurrentFormatTime(0));

	}

	private synchronized void tab3_logMessage(String message, boolean append) {
		String info = "[" + CommonUtils.getCurrentFormatTime(0) + "]" + " " + message + "\n";
		if (append) {
			tab3_ta_log.append(info);
		} else {
			tab3_ta_log.setText(info);
		}
		tab3_ta_log.setSelectionStart(tab3_ta_log.getText().length());
	}

	private void tab3_updateVerifyCode() {
		tab3_logMessage("正在获取验证码...", true);
		tab3_label_verify.setText("正在获取...");
		apiController3.getVerifyCode(new ResultCallback<byte[]>() {
			@Override
			public void onResult(boolean success, byte[] result, String error) {
				String tip = success ? "验证码成功返回，请输入登录。" : "获取验证码失败。";
				tab3_logMessage(tip, true);
				if (success) {
					tab3_label_verify.setIcon(new ImageIcon(result));
					tab3_label_verify.setText("");
				} else {
					tab3_label_verify.setIcon(null);
					tab3_label_verify.setText("重新获取");
				}
			}
		});

	}

	private void tab3_login() {
		String phone = tab3_tf_qtt_account.getText().trim();
		String pwd = tab3_tf_qttpwd.getText().trim();
		String code = tab3_tf_verify.getText().trim();

		if (phone.equals("") || pwd.equals("") || code.equals("")) {
			JOptionPane.showMessageDialog(this, "账号、密码和验证码均不能不空！");
			return;
		}

		tab3_label_tip.setText("正在登录...");
		tab3_logMessage("正在登录...", true);
		apiController3.login(phone, pwd, code, new ResultCallback<Boolean>() {
			@Override
			public void onResult(boolean success, Boolean result, String error) {
				boolean loginSuccess = success && result;
				String tip = loginSuccess ? "登录成功" : "登录失败";
				tab3_logMessage(tip, true);
				tab3_hasLogin = loginSuccess;
				tab3_label_tip.setText(tip);
				if (loginSuccess) {
					tab3_getComboData();
				}
			}
		});
	}

	private void tab3_getComboData() {
		tab3_logMessage("正在获取选项下拉数据...", true);
		apiController3.getSportTypeListAreaList(new ResultCallback<SportListAreaListModel>() {
			@Override
			public void onResult(boolean success, SportListAreaListModel result, String error) {
				String tipString = success ? "成功初始化选项数据。" : "获取初始化选项数据失败！";
				tab3_logMessage(tipString, true);
				if (success) {
					tab3_modelList_sport = result.getSportList();
					tab3_modelList_area = result.getAreaList();
					ComboBoxModel sportBoxModel = new DefaultComboBoxModel(
							ItemModel.getTitleArray(tab3_modelList_sport));
					tab3_combo_sporttype.setModel(sportBoxModel);
					ComboBoxModel areaBoxModel = new DefaultComboBoxModel(ItemModel.getTitleArray(tab3_modelList_area));
					tab3_combo_area.setModel(areaBoxModel);
					tab3_searchStadiumList();
				}
			}
		});
	}

	private void tab3_searchStadiumList() {
		int sIndex = tab3_combo_sporttype.getSelectedIndex();
		int aIndex = tab3_combo_area.getSelectedIndex();
		String sportCode = sIndex >= 0 && sIndex < tab3_modelList_sport.size()
				? tab3_modelList_sport.get(sIndex).getId()
				: "";
		String area = aIndex >= 0 && aIndex < tab3_modelList_area.size() ? tab3_modelList_area.get(aIndex).getId()
				: "0";
		String searchContent = tab3_tf_search.getText().trim();
		String mark = "[keyword=" + searchContent + "] ";
		tab3_logMessage(mark + "正在搜索场馆... ", true);
		apiController3.getStadiumList(sportCode, area, searchContent, new ResultCallback<ArrayList<StadiumModel>>() {

			@Override
			public void onResult(boolean success, ArrayList<StadiumModel> result, String error) {
				String tipString = success ? mark + "成功返回场馆列表, size=" + result.size() : "搜索场馆列表失败，稍后请重新尝试";
				tab3_logMessage(tipString, true);
				if (success) {
					tab3_modelList_cg = result;
					ComboBoxModel boxModel = new DefaultComboBoxModel(StadiumModel.getTitleArray(tab3_modelList_cg));
					tab3_combo_cgname.setModel(boxModel);
					if (result.size() > 0) {
						tab3_selectStadium(result.get(0));
					}
				}
			}
		});
	}

	private void tab3_selectStadium(final StadiumModel model) {
		tab3_logMessage("开始初始化选中场馆..." + model.getTitle(), true);

		apiController3.selectStadium(model.getStadiumResourceId(), new ResultCallback<StadiumModel>() {

			@Override
			public void onResult(boolean success, StadiumModel result, String error) {
				String tip = success ? "成功初始化选中场馆-->" + model.getTitle() : "初始化场馆失败-->" + model.getTitle();
				tab3_logMessage(tip, true);
				if (success) {
					tab3_select_stadiuModel = result;
					tab3_select_stadiuModel.setTitle(model.getTitle());
					tab3_label_selected_cg.setText("<html><u>" + model.getTitle() + "</u></html>");
					ComboBoxModel boxModel0 = new DefaultComboBoxModel(
							ItemModel.getTitleArray(tab3_select_stadiuModel.getSportCodeList()));
					tab3_combo_targetSportCode.setModel(boxModel0);
					ComboBoxModel boxModel1 = new DefaultComboBoxModel(
							ItemModel.getTitleArray(tab3_select_stadiuModel.getDateList()));
					tab3_combo_date.setModel(boxModel1);
//                    ComboBoxModel boxModel2 = new DefaultComboBoxModel(ItemModel.getTitleArray(tab3_select_stadiuModel.getTimeList()));
//                    tab3_combo_time.setModel(boxModel2);
					tab3_requestTimeSection();
				}
			}
		});
	}

	private void tab3_requestTimeSection() {
		final String sportCode = tab3_select_stadiuModel.getSportCodeList()
				.get(tab3_combo_targetSportCode.getSelectedIndex()).getId();
		final String date = tab3_select_stadiuModel.getDateList().get(1).getId();// just in order to get time sections
		tab3_logMessage("获取订场时间段...", true);
		apiController3.requestTimeSection(tab3_select_stadiuModel, sportCode, date,
				new ResultCallback<ArrayList<ItemModel>>() {
					@Override
					public void onResult(boolean success, ArrayList<ItemModel> result, String error) {
						String tip = success ? "成功返回订场时间段。" : "获取订场时间段失败，请手动输入！（e.g. 18:00 - 20:00）";
						tab3_logMessage(tip, true);
						if (success) {
							tab3_select_stadiuModel.setTimeList(result);
							ComboBoxModel boxModel2 = new DefaultComboBoxModel(
									ItemModel.getTitleArray(tab3_select_stadiuModel.getTimeList()));
							tab3_combo_time.setModel(boxModel2);
						}
					}
				});
	}

	private void tab3_query(String sportCode, String date, String time, long interval) {

		if (tab3_running == false) {
			return;
		}
//        String stadiumResourceId = tab3_select_stadiuModel.getStadiumResourceId();
//        String stadiumCode = tab3_select_stadiuModel.getStadiumCode();
//        String sportCode = tab3_select_stadiuModel.getSportCode();
		tab3_logMessage("开始检测是否有空场...", true);
		apiController3.query(tab3_select_stadiuModel, sportCode, date, time,
				new ResultCallback<ArrayList<OrderModel>>() {
					@Override
					public void onResult(boolean success, ArrayList<OrderModel> modelList, String error) {
						if (success && modelList != null && modelList.size() > 0) {
							tab3_logMessage("检测到有空场！！！！！！！！！！！！！！！！ 数量 = " + modelList.size(), true);
							String titles = "[ ";
							for (int i = 0; i < modelList.size(); i++) {
								String suff = i == modelList.size() - 1 ? " ]" : ", ";
								titles += modelList.get(i).getStadiumFieName() + suff;
							}
							tab3_logMessage(titles, true);
							tab3_running = false;
							startSubmitThreads(modelList);
						} else {
							tab3_logMessage("->>>暂无空场", true);
							new Timer().schedule(new TimerTask() {
								public void run() {
									tab3_query(sportCode, date, time, interval);
									this.cancel();
								}
							}, interval);

						}
					}
				});
	}

	private void startSubmitThreads(ArrayList<OrderModel> modelList) {
		int maxSubmitCount = CommonUtils.parse2Int(tab3_tf_orderSubmitCount.getText().trim());
		tab3_logMessage("maxSubmitCount = " + maxSubmitCount, true);
		int curSubmitCount = 0;
		for (OrderModel model : modelList) {
			if (curSubmitCount >= maxSubmitCount) {
				break;
			}
			curSubmitCount++;
			final String fieIds_storeIds = model.getStadiumFieId() + "_" + model.getStoreId();
			final String numString = "[" + curSubmitCount + "] ";
			tab3_logMessage(
					numString + "开始提交订单... name=" + model.getStadiumFieName() + ", fieIds_storeIds=" + fieIds_storeIds,
					true);
			apiController3.submitOrder(tab3_select_stadiuModel, model, new ResultCallback<Boolean>() {
				@Override
				public void onResult(boolean success, Boolean result, String error) {
					boolean orderSuccess = success && result;
					String tipH = orderSuccess ? "*****提交成功，请登录网页端查看*****" : "*****提交失败*****  ";
					tipH = numString + tipH;
					String info = "name=" + model.getStadiumFieName() + ", openDate=" + model.getOpenDate()
							+ ", timeSection=" + model.getTimeSection();
					String tipT = ", fieIds_storeIds=" + fieIds_storeIds;
					tab3_logMessage(tipH + info + tipT, true);
					if (orderSuccess) {
						JOptionPane.showMessageDialog(MainJFrame.this, tipH + "\n" + info, "抢购成功",
								JOptionPane.INFORMATION_MESSAGE);
					}
				}
			});
		}
	}

	private void tab3_startQiang() {

		if (!tab3_hasLogin) {
			JOptionPane.showMessageDialog(this, "当前暂未登录");
			return;
		}
		if ("".equals(tab3_select_stadiuModel.getStadiumResourceId())) {
			JOptionPane.showMessageDialog(this, "当前暂无加载场馆");
			return;
		}

		final String sportCode = tab3_select_stadiuModel.getSportCodeList()
				.get(tab3_combo_targetSportCode.getSelectedIndex()).getId();
		final String date = tab3_select_stadiuModel.getDateList().get(tab3_combo_date.getSelectedIndex()).getId();
		final String time = String.valueOf(tab3_combo_time.getSelectedItem()).trim();
		long interval = Math.abs(CommonUtils.parse2Long(tab3_tf_interval.getText().trim()));
//        final long interval = inter < 0 ? 0 : inter;

		tab3_logMessage("开始抢购==========================", true);
		tab3_running = true;
		tab3_query(sportCode, date, time, interval);
	}

	private void tab3_stopQiang() {
		tab3_logMessage("停止抢购==========================", true);
		tab3_running = false;
		tab3_checkbox_timer.setSelected(false);
	}

	private void tab3_clearLog() {
		tab3_ta_log.setText("");
	}

}
